###############################################################################
##                                                                           ##
##   Common include makefile for SCU native applications resp. Linux apps    ##
##                                                                           ##
##---------------------------------------------------------------------------##
## File:    makefile.scun                                                    ##
## (c):     GSI Helmholtz Centre for Heavy Ion Research GmbH                 ##
## Author:  Ulrich Becker                                                    ##
## Date:    22.01.2019                                                       ##
###############################################################################
MAKEFILE_DIR ?= $(REPOSITORY_DIR)/makefiles

ifndef OECORE_SDK_VERSION
   $(warning "Project will not build by Yocto-SDK!")
endif

include $(MAKEFILE_DIR)/scu_dirs.inc

EB_API_DIR           = $(IP_CORE_DIR)/etherbone-core/api
ETHERBONE_DIR        = $(SCU_LIB_SRC_LINUX_DIR)/etherbone

OPT_PARSER_DIR       = $(SCU_LIB_SRC_LINUX_DIR)/command_line_option_parser_cpp11/src
LINUX_PROCESS_ID_DIR = $(SCU_LIB_SRC_LINUX_DIR)/get_linux_process_id/src
GNU_PLOT_STREAM_DIR  = $(SCU_LIB_SRC_LINUX_DIR)/gnu-plotstream/src
EB_FE_WRAPPER_DIR    = $(ETHERBONE_DIR)/fe-wrapper
EB_API_DIR           = $(ETHERBONE_DIR)/etherbone-core/api
ifdef OECORE_SDK_VERSION
   EB_LIB_DIR        = $(SCU_LIB_SRC_LINUX_DIR)/etherbone-yocto/lib/
else
   EB_LIB_DIR        = $(EB_API_DIR)/libs
endif

DEFINES += CONFIG_NO_INCLUDE_PATHS

INCLUDE_DIRS += $(EB_FE_WRAPPER_DIR)
INCLUDE_DIRS += $(EB_API_DIR)
LIB_DIRS     += $(EB_LIB_DIR)

# ------------ Additional defines for Doxygen ---------------------------------
DOX_INPUT    += $(SCU_DIR)/scu_bus.h
DOX_INPUT    += $(EB_API_DIR)
DOX_INPUT    += $(MAKEFILE_DIR)/makefile.scun
# -------------- End of defines for Doxygen -----------------------------------

include $(MAKEFILE_DIR)/makefile.native

#-------------------- upload and/or running in target SCU ---------------------
# For developing purposes only.
ifdef SCU_URL

SCU_USER       ?= root
SCU_TARGET_DIR ?= /usr/bin
SCP            ?= scp
SSH            ?= ssh

.PHONY: load
load: $(BIN_FILE)
	$(SCP) $(BIN_FILE) $(SCU_USER)@$(SCU_URL):$(SCU_TARGET_DIR)
ifndef IS_LIBRARY
.PHONY:
lrun:
	$(SSH) $(SCU_USER)@$(SCU_URL) $(SCU_TARGET_DIR)/$(notdir $(BIN_FILE)) $(REMOTE_CALL_ARGS)
endif # ifndef IS_LIBRARY
endif # ifdef SCU_URL

ifeq ($(shell echo $${HOSTNAME:0:4}), asl7)

ifdef OECORE_SDK_VERSION
   PUBLIC_TARGET ?= /common/usr/cscofe/bin/yocto/
   PUBLIC_SCU_TARGET ?= /common/export/nfsinit/global/tools/yocto/
else
   PUBLIC_TARGET ?= /common/usr/cscofe/bin/scuxl/
   PUBLIC_SCU_TARGET ?= /common/export/nfsinit/global/tools/scuxl/
endif
.PHONY: public
public: $(BIN_FILE)
ifdef FOR_SCU_AND_ACC
	cp -u $(BIN_FILE) $(PUBLIC_SCU_TARGET)
	ln -sf $(PUBLIC_SCU_TARGET)$(notdir $(BIN_FILE)) $(PUBLIC_TARGET)
else
ifdef FOR_SCU
	cp -u $(BIN_FILE) $(PUBLIC_SCU_TARGET)
else
	cp -u $(BIN_FILE) $(PUBLIC_TARGET)
endif # ifdef FOR_SCU
endif # ifdef FOR_SCU_AND_ACC
else
   # $(error Makefile is not running on ASL!)
endif # ifeq ($(shell echo $${HOSTNAME:0:5}), asl74)

#=================================== EOF ======================================
